// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rubiks.Data;

namespace Rubiks.Migrations
{
    [DbContext(typeof(RubikContext))]
    [Migration("20201017142507_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Rubiks.Models.RubikCube", b =>
                {
                    b.Property<int>("RubikId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Complexity");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Sides");

                    b.HasKey("RubikId");

                    b.ToTable("RubikCube");
                });

            modelBuilder.Entity("Rubiks.Models.TrackingSolution", b =>
                {
                    b.Property<int>("TrackingSolutionId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ResolutionDate");

                    b.Property<int>("ResolutionFinishedSeconds");

                    b.Property<int?>("RubikId");

                    b.HasKey("TrackingSolutionId");

                    b.HasIndex("RubikId");

                    b.ToTable("TrackingSolution");
                });

            modelBuilder.Entity("Rubiks.Models.TrackingSolution", b =>
                {
                    b.HasOne("Rubiks.Models.RubikCube", "Rubik")
                        .WithMany()
                        .HasForeignKey("RubikId");
                });
#pragma warning restore 612, 618
        }
    }
}
